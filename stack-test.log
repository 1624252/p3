Version 2.9.3.1, Git revision d2f589c16fbc690589621dd761c4e58af393d9e5 (dirty) (9243 commits) x86_64
Compiled with:
- Cabal-3.8.1.0
- Cabal-syntax-3.8.1.0
- Glob-0.10.2
- OneTuple-0.4.2
- QuickCheck-2.15.0.1
- StateVar-1.2.2
- aeson-2.1.2.1
- annotated-wl-pprint-0.7.0
- ansi-terminal-1.0.2
- ansi-terminal-types-0.11.5
- appar-0.1.8
- array-0.5.4.0
- asn1-encoding-0.9.6
- asn1-parse-0.9.5
- asn1-types-0.3.4
- assoc-1.1.1
- async-2.2.5
- attoparsec-0.14.4
- attoparsec-0.14.4
- attoparsec-aeson-2.1.0.0
- auto-update-0.1.6
- base-4.17.2.1
- base-compat-0.14.1
- base-compat-batteries-0.14.1
- base-orphans-0.9.3
- base16-bytestring-1.0.2.0
- base64-bytestring-1.2.1.0
- basement-0.0.16
- bifunctors-5.6.2
- binary-0.8.9.1
- bitvec-1.1.5.0
- blaze-builder-0.4.4.1
- blaze-html-0.9.2.0
- blaze-markup-0.8.3.0
- byteorder-1.0.4
- bytestring-0.11.5.3
- casa-client-0.0.3
- casa-types-0.0.3
- case-insensitive-1.2.1.0
- cborg-0.2.10.0
- cereal-0.5.8.3
- clock-0.8.4
- colour-2.3.6
- comonad-5.0.9
- conduit-1.3.6.1
- conduit-extra-1.3.8
- containers-0.6.7
- contravariant-1.5.5
- cookie-0.5.0
- cryptohash-sha256-0.11.102.1
- crypton-1.0.4
- crypton-conduit-0.2.3
- crypton-connection-0.4.5
- crypton-socks-0.6.2
- crypton-x509-1.7.7
- crypton-x509-store-1.6.11
- crypton-x509-system-1.6.7
- crypton-x509-validation-1.6.14
- data-default-0.7.1.3
- data-default-class-0.1.2.2
- data-default-instances-containers-0.1.0.3
- data-default-instances-dlist-0.0.1.2
- data-default-instances-old-locale-0.0.1.2
- data-fix-0.3.4
- deepseq-1.4.8.0
- digest-0.0.2.1
- directory-1.3.7.1
- distributive-0.6.2.1
- dlist-1.0
- easy-file-0.2.5
- echo-0.1.4
- ed25519-0.0.5.0
- exceptions-0.10.5
- extra-1.7.16
- fast-logger-3.2.4
- file-embed-0.0.16.0
- filelock-0.1.1.8
- filepath-1.4.2.2
- foldable1-classes-compat-0.1.2
- fsnotify-0.4.4.0
- generic-deriving-1.14.6
- generically-0.1.1
- ghc-bignum-1.3
- ghc-boot-th-9.4.8
- ghc-prim-0.9.1
- githash-0.1.6.3
- hackage-security-0.6.3.1
- half-0.3.3
- hashable-1.4.7.0
- hi-file-parser-0.1.8.0
- hinotify-0.4.2
- hourglass-0.2.12
- hpack-0.38.0
- hpc-0.6.1.0
- http-api-data-0.6.1
- http-client-0.7.19
- http-client-tls-0.3.6.4
- http-conduit-2.3.9.1
- http-download-0.2.1.0
- http-types-0.12.4
- indexed-traversable-0.1.4
- indexed-traversable-instances-0.1.2
- infer-license-0.2.0
- integer-conversion-0.1.1
- integer-gmp-1.1
- integer-logarithms-1.0.4
- iproute-1.7.15
- libyaml-0.1.4
- lift-type-0.1.2.0
- lifted-base-0.2.3.12
- megaparsec-9.7.0
- memory-0.18.0
- microlens-0.4.14.0
- microlens-mtl-0.2.1.0
- microlens-th-0.4.3.17
- mime-types-0.1.2.0
- mintty-0.1.4
- monad-control-1.0.3.1
- monad-logger-0.3.42
- monad-loops-0.4.3
- mono-traversable-1.0.21.0
- mtl-2.2.2
- mustache-2.4.3.1
- neat-interpolation-0.5.1.4
- network-3.1.4.0
- network-uri-2.6.4.2
- old-locale-1.0.0.7
- old-time-1.1.0.4
- open-browser-0.2.1.1
- optparse-applicative-0.18.1.0
- optparse-simple-0.1.1.4
- os-string-2.0.8
- pantry-0.8.2.2
- parsec-3.1.16.1
- parser-combinators-1.3.0
- path-0.9.5
- path-io-1.8.2
- path-pieces-0.2.1
- pem-0.2.4
- persistent-2.14.5.2
- persistent-sqlite-2.13.1.1
- pretty-1.1.3.6
- prettyprinter-1.7.1
- prettyprinter-ansi-terminal-1.1.3
- primitive-0.9.1.0
- process-1.6.18.0
- project-template-0.2.1.0
- random-1.2.1.3
- resource-pool-0.2.3.2
- resourcet-1.2.6
- retry-0.9.3.1
- rio-0.1.22.0
- rio-orphans-0.1.2.0
- rio-prettyprint-0.1.8.0
- rts-1.0.2
- safe-0.3.21
- safe-exceptions-0.1.7.4
- scientific-0.3.8.0
- semialign-1.3.1
- semigroupoids-6.0.1
- serialise-0.2.6.1
- silently-1.2.5.4
- split-0.2.5
- splitmix-0.1.2
- stm-2.5.1.0
- stm-chans-3.0.0.9
- streaming-commons-0.2.3.0
- strict-0.5
- syb-0.7.3
- tagged-0.8.9
- tar-0.5.1.1
- tar-conduit-0.4.1
- template-haskell-2.19.0.0
- temporary-1.3
- text-2.0.2
- text-iso8601-0.1.1
- text-metrics-0.3.3
- text-short-0.1.6
- th-abstraction-0.5.0.0
- th-compat-0.1.6
- th-expand-syns-0.4.12.0
- th-lift-0.8.6
- th-lift-instances-0.1.20
- th-reify-many-0.1.10
- these-1.2.1
- time-1.12.2
- time-compat-1.9.8
- tls-2.0.6
- transformers-0.5.6.2
- transformers-base-0.4.6
- transformers-compat-0.7.2
- typed-process-0.2.13.0
- unicode-data-0.6.0
- unicode-transforms-0.4.0.1
- unix-2.7.3
- unix-compat-0.7.4.1
- unix-time-0.4.17
- unliftio-0.2.25.1
- unliftio-core-0.2.1.0
- unordered-containers-0.2.20.1
- uuid-types-1.0.6
- vault-0.3.1.5
- vector-0.13.2.0
- vector-algorithms-0.9.1.0
- vector-stream-0.1.0.1
- witherable-0.4.2
- yaml-0.11.11.2
- zip-archive-0.4.3.2
- zlib-0.7.0.0

Warning: this is an unsupported build that may use different versions of
dependencies and GHC than the officially released binaries, and therefore may
not behave identically.  If you encounter problems, please try the latest
official build by running 'stack upgrade --force-download'.

2025-10-17 21:57:56.725728: [debug] Checking for project config at: /home/diego/Desktop/p3/stack.yaml
2025-10-17 21:57:56.726134: [debug] Loading project config file stack.yaml
2025-10-17 21:57:56.731718: [debug] (SQL) SELECT COUNT(*) FROM "last_performed" WHERE ("action"=?) AND ("timestamp">=?); [PersistInt64 1,PersistUTCTime 2025-10-17 02:57:56.731634062 UTC]
2025-10-17 21:57:56.732490: [debug] Using package location completions from a lock file
2025-10-17 21:57:56.734642: [debug] Loaded snapshot from Pantry database.
2025-10-17 21:57:57.076707: [debug] Running Hpack on /home/diego/Desktop/p3/package.yaml
2025-10-17 21:57:57.081776: [debug] Hpack output unchanged in /home/diego/Desktop/p3/p3.cabal
2025-10-17 21:57:57.082311: [debug] Prefetching git repos: []
2025-10-17 21:57:57.082371: [debug] []
2025-10-17 21:57:57.084606: [warn] Stack has not been tested with GHC versions above 9.4, and using 9.6.7, this may fail
2025-10-17 21:57:57.084763: [debug] Getting system compiler version
2025-10-17 21:57:57.093660: [debug] (SQL) SELECT "id","actual_version","arch","ghc_path","ghc_size","ghc_modified","ghc_pkg_path","runghc_path","haddock_path","cabal_version","global_db","global_db_cache_size","global_db_cache_modified","info","global_dump" FROM "compiler_cache" WHERE "ghc_path"=?; [PersistText "/usr/bin/ghc-9.4.8"]
2025-10-17 21:57:57.407312: [debug] Loaded compiler information from cache
2025-10-17 21:57:57.410336: [debug] Not using compiler at "/usr/bin/ghc-9.4.8": UnwantedCompilerVersion
2025-10-17 21:57:57.411130: [debug] Installed tools: 
 - ghc-tinfo6-9.6.7
 - ghc-tinfo6-9.8.4
2025-10-17 21:57:57.411394: [debug] Run process: /sbin/ldconfig -p
2025-10-17 21:57:57.414718: [debug] Process finished in 3ms: /sbin/ldconfig -p
2025-10-17 21:57:57.415704: [debug] Did not find shared library libtinfo.so.5
2025-10-17 21:57:57.415916: [debug] Found shared library libtinfo.so.6 in /usr/lib/
2025-10-17 21:57:57.415996: [debug] Found shared library libncursesw.so.6 in 'ldconfig -p' output
2025-10-17 21:57:57.416066: [debug] Found shared library libgmp.so.10 in 'ldconfig -p' output
2025-10-17 21:57:57.416186: [debug] Did not find shared library libgmp.so.3
2025-10-17 21:57:57.416210: [debug] Potential GHC builds: tinfo6, ncurses6
2025-10-17 21:57:57.416282: [debug] Found already installed GHC builds: tinfo6
2025-10-17 21:57:57.416480: [debug] (SQL) SELECT "id","actual_version","arch","ghc_path","ghc_size","ghc_modified","ghc_pkg_path","runghc_path","haddock_path","cabal_version","global_db","global_db_cache_size","global_db_cache_modified","info","global_dump" FROM "compiler_cache" WHERE "ghc_path"=?; [PersistText "/home/diego/.stack/programs/x86_64-linux/ghc-tinfo6-9.6.7/bin/ghc-9.6.7"]
2025-10-17 21:57:57.459568: [debug] Loaded compiler information from cache
2025-10-17 21:57:57.459836: [warn] Stack has not been tested with Cabal versions above 3.8, but version 3.10.3.0 was found, this may fail
2025-10-17 21:57:57.459891: [debug] Resolving package entries
2025-10-17 21:57:57.459953: [debug] Parsing the targets
2025-10-17 21:57:57.463503: [debug] Checking flags
2025-10-17 21:57:57.463612: [debug] SourceMap constructed
2025-10-17 21:57:57.473599: [debug] Starting to execute command inside EnvConfig
2025-10-17 21:57:57.477853: [debug] Finding out which packages are already installed
2025-10-17 21:57:57.478146: [debug] Run process: /home/diego/.stack/programs/x86_64-linux/ghc-tinfo6-9.6.7/bin/ghc-pkg-9.6.7 --global --no-user-package-db dump --expand-pkgroot
2025-10-17 21:57:57.550444: [debug] Process finished in 72ms: /home/diego/.stack/programs/x86_64-linux/ghc-tinfo6-9.6.7/bin/ghc-pkg-9.6.7 --global --no-user-package-db dump --expand-pkgroot
2025-10-17 21:57:57.569841: [debug] Run process: /home/diego/.stack/programs/x86_64-linux/ghc-tinfo6-9.6.7/bin/ghc-pkg-9.6.7 --user --no-user-package-db --package-db /home/diego/.stack/snapshots/x86_64-linux-tinfo6/75b57e04a6b6b5f46a2598b134ce86581e454b4b8f625afe9301ae5b5b6efacf/9.6.7/pkgdb dump --expand-pkgroot
2025-10-17 21:57:57.681690: [debug] Process finished in 112ms: /home/diego/.stack/programs/x86_64-linux/ghc-tinfo6-9.6.7/bin/ghc-pkg-9.6.7 --user --no-user-package-db --package-db /home/diego/.stack/snapshots/x86_64-linux-tinfo6/75b57e04a6b6b5f46a2598b134ce86581e454b4b8f625afe9301ae5b5b6efacf/9.6.7/pkgdb dump --expand-pkgroot
2025-10-17 21:57:57.697362: [debug] Run process: /home/diego/.stack/programs/x86_64-linux/ghc-tinfo6-9.6.7/bin/ghc-pkg-9.6.7 --user --no-user-package-db --package-db /home/diego/Desktop/p3/.stack-work/install/x86_64-linux-tinfo6/75b57e04a6b6b5f46a2598b134ce86581e454b4b8f625afe9301ae5b5b6efacf/9.6.7/pkgdb dump --expand-pkgroot
2025-10-17 21:57:57.741620: [debug] Process finished in 44ms: /home/diego/.stack/programs/x86_64-linux/ghc-tinfo6-9.6.7/bin/ghc-pkg-9.6.7 --user --no-user-package-db --package-db /home/diego/Desktop/p3/.stack-work/install/x86_64-linux-tinfo6/75b57e04a6b6b5f46a2598b134ce86581e454b4b8f625afe9301ae5b5b6efacf/9.6.7/pkgdb dump --expand-pkgroot
2025-10-17 21:57:57.742396: [debug] Constructing the build plan
2025-10-17 21:57:57.745640: [debug] (SQL) SELECT "id","directory","type","pkg_src","active","path_env_var","haddock" FROM "config_cache" WHERE "directory"=? AND "type"=?; [PersistText "/home/diego/Desktop/p3/.stack-work/install/x86_64-linux-tinfo6/75b57e04a6b6b5f46a2598b134ce86581e454b4b8f625afe9301ae5b5b6efacf/9.6.7/",PersistText "lib:p3-0.1.0.0-75U2a6G3mHfIFZxtosBpB4"]
2025-10-17 21:57:57.746134: [debug] (SQL) SELECT "id", "config_cache_id", "index", "option" FROM "config_cache_dir_option" WHERE ("config_cache_id"=?) ORDER BY "index"; [PersistInt64 63]
2025-10-17 21:57:57.746406: [debug] (SQL) SELECT "id", "config_cache_id", "index", "option" FROM "config_cache_no_dir_option" WHERE ("config_cache_id"=?) ORDER BY "index"; [PersistInt64 63]
2025-10-17 21:57:57.746580: [debug] (SQL) SELECT "id", "config_cache_id", "ghc_pkg_id" FROM "config_cache_dep" WHERE ("config_cache_id"=?); [PersistInt64 63]
2025-10-17 21:57:57.746709: [debug] (SQL) SELECT "id", "config_cache_id", "component" FROM "config_cache_component" WHERE ("config_cache_id"=?); [PersistInt64 63]
2025-10-17 21:57:57.747132: [debug] Start: getPackageFiles /home/diego/Desktop/p3/p3.cabal
2025-10-17 21:57:57.762523: [debug] Finished in 15ms: getPackageFiles /home/diego/Desktop/p3/p3.cabal
2025-10-17 21:57:57.766574: [debug] Checking if we are going to build multiple executables with the same name
2025-10-17 21:57:57.766716: [debug] Executing the build plan
2025-10-17 21:57:57.768379: [info] p3> test (suite: p3-test)
2025-10-17 21:57:57.768542: [info] 
2025-10-17 21:57:57.768904: [debug] Run process within /home/diego/Desktop/p3/: /home/diego/Desktop/p3/.stack-work/dist/x86_64-linux-tinfo6/Cabal-3.10.3.0/build/p3-test/p3-test

FunLexer
  lexer
    handles an empty string [✔]
    handles whitespace [✔]
    lexes a number [✔]
    lexes an identifier [✔]
    lexes a keyword [✔]
    lexes a symbol [✔]
    lexes a multi-character symbol [✔]
    lexes a simple expression [✔]
    handles an unexpected character [✔]
ParserCombinators
  eof
    succeeds on empty input [✔]
    fails on non-empty input [✔]
  satisfy
    succeeds when predicate is met [✔]
    fails when predicate is not met [✔]
  token
    consumes the correct token [✔]
    fails on incorrect token [✔]
  <|>
    chooses the first parser if it succeeds [✔]
    chooses the second parser if the first fails [✔]
  alt
    returns Left if the first parser succeeds [✔]
    returns Right if the first parser fails and second succeeds [✔]
  oneof
    picks the first successful parser [✔]
  opt
    returns Just the value if parser succeeds [✔]
    returns Nothing if parser fails [✔]
  rpt
    parses zero or more occurrences [✔]
  rptSep
    parses zero or more occurrences with a separator [✔]
  rptDropSep
    parses zero or more occurrences and drops the separator [✔]
  some
    parses one or more occurrences [✔]
    fails if no occurrences found [✔]
  sepBy
    parses zero or more occurrences separated by a separator [✔]
  sepBy1
    parses one or more occurrences separated by a separator [✔]
    fails if no occurrences found [✔]
  between
    parses content between delimiters [✔]
  skip
    ignores the result of a parser [✔]
  lookAhead
    parses without consuming input [✔]
  parse
    runs parser and ensures EOF [✔]
    fails if input remains after parsing [✔]
  chainl1
    parses left-associative expressions [✔]
    handles single value without operators [✔]
  chainr1
    parses right-associative expressions [✔]
    handles single value without operators [✔]
  tokens
    matches a sequence of tokens [✔]
    fails if sequence doesn't match [✔]
    succeeds on empty sequence [✔]
  string
    matches a string [✔]
    fails if string doesn't match [✔]
Small
  reduceFully
Simulating: Literal 10
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces an integer literal [✔]
Simulating: StringLiteral "hello"
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces a string literal [✔]
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 5)], getInput = [], getOutput = []}
    reduces a variable [✔]
Simulating: Seq (Let "x" (Literal 5)) (Var "x")
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Let "x" (Literal 5)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 5
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 5)], getInput = [], getOutput = []}
    reduces a let expression [✔]
    reduces a sequence [✔]
Simulating: If (BoolLit True) (Literal 10) (Literal 20)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: BoolLit True
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 10
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces an if expression (then) [✔]
Simulating: If (BoolLit False) (Literal 10) (Literal 20)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: BoolLit False
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 20
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces an if expression (else) [✔]
Simulating: Seq (Let "x" (Literal 3)) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Let "x" (Literal 3)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 3
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: If (Var "x") (Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))) Skip
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: Literal 1
     Machine: MockMachine {getMem = fromList [("x",IntVal 3)], getInput = [], getOutput = []}
Simulating: While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: If (Var "x") (Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))) Skip
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: Literal 1
     Machine: MockMachine {getMem = fromList [("x",IntVal 2)], getInput = [], getOutput = []}
Simulating: While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: If (Var "x") (Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))) Skip
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: Literal 1
     Machine: MockMachine {getMem = fromList [("x",IntVal 1)], getInput = [], getOutput = []}
Simulating: While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: MockMachine {getMem = fromList [("x",IntVal 0)], getInput = [], getOutput = []}
Simulating: If (Var "x") (Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))) Skip
     Machine: MockMachine {getMem = fromList [("x",IntVal 0)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 0)], getInput = [], getOutput = []}
Simulating: Skip
     Machine: MockMachine {getMem = fromList [("x",IntVal 0)], getInput = [], getOutput = []}
    reduces a while loop [✔]
Simulating: Seq (Read "x") (Write (Var "x"))
     Machine: MockMachine {getMem = fromList [], getInput = [IntVal 42], getOutput = []}
Simulating: Read "x"
     Machine: MockMachine {getMem = fromList [], getInput = [IntVal 42], getOutput = []}
Simulating: Write (Var "x")
     Machine: MockMachine {getMem = fromList [("x",IntVal 42)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 42)], getInput = [], getOutput = []}
    reduces read and write [✔]
Simulating: BinaryOps Sub (Literal 10) (Literal 3)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 10
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 3
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces subtraction [✔]
Simulating: BinaryOps Add (Literal 10) (Literal 3)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 10
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 3
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces addition [✔]
Simulating: BinaryOps Mul (Literal 10) (Literal 3)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 10
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 3
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces multiplication [✔]
Simulating: BinaryOps Div (Literal 12) (Literal 3)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 12
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 3
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces division - nonzero denominator case [✔]
Simulating: BinaryOps Div (Literal 12) (Literal 0)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 12
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 0
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces division - zero denominator case [✔]
Simulating: BinaryOps Mod (Literal 12) (Literal 3)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 12
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 3
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces modulus - nonzero denominator case [✔]
Simulating: BinaryOps Mod (Literal 12) (Literal 0)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 12
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 0
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces modulus - zero denominator case [✔]
Simulating: Skip
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    reduces skip [✔]
Simulating: BinaryOps Sub (Literal 10) (StringLiteral "hello")
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 10
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: StringLiteral "hello"
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    returns a Sad result for a type error [✔]
Simulating: App (Fun "x" (BinaryOps Add (Var "x") (Literal 1))) (Literal 41)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Fun "x" (BinaryOps Add (Var "x") (Literal 1))
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 41
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: BinaryOps Add (Var "x") (Literal 1)
     Machine: MockMachine {getMem = fromList [("x",IntVal 41)], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 41)], getInput = [], getOutput = []}
Simulating: Literal 1
     Machine: MockMachine {getMem = fromList [("x",IntVal 41)], getInput = [], getOutput = []}
    applies a simple function [✘]
Simulating: App (Fun "x" (Var "x")) (Literal 7)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Fun "x" (Var "x")
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 7
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Var "x"
     Machine: MockMachine {getMem = fromList [("x",IntVal 7)], getInput = [], getOutput = []}
    binds parameter in environment for body [✘]
Simulating: App (Literal 3) (Literal 4)
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 3
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
Simulating: Literal 4
     Machine: MockMachine {getMem = fromList [], getInput = [], getOutput = []}
    errors when applying a non-function [✔]
Sprintf
  sprintf
    acts as the identity when given no format specifiers [✔]
    handles  [✔]
    substitutes words correctly [✔]

Failures:

  test/SmallSpec.hs:191:39: 
  1) Small.reduceFully applies a simple function
       expected: (Right (IntVal 42),MockMachine {getMem = fromList [], getInput = [], getOutput = []})
        but got: (Right (IntVal 42),MockMachine {getMem = fromList [("x",IntVal 41)], getInput = [], getOutput = []})

  To rerun use: --match "/Small/reduceFully/applies a simple function/" --seed 1894994764

  test/SmallSpec.hs:197:39: 
  2) Small.reduceFully binds parameter in environment for body
       expected: (Right (IntVal 7),MockMachine {getMem = fromList [], getInput = [], getOutput = []})
        but got: (Right (IntVal 7),MockMachine {getMem = fromList [("x",IntVal 7)], getInput = [], getOutput = []})

  To rerun use: --match "/Small/reduceFully/binds parameter in environment for body/" --seed 1894994764

Randomized with seed 1894994764

Finished in 0.0242 seconds
68 examples, 2 failures
2025-10-17 21:57:57.824675: [debug] Process finished in 56ms: /home/diego/Desktop/p3/.stack-work/dist/x86_64-linux-tinfo6/Cabal-3.10.3.0/build/p3-test/p3-test
2025-10-17 21:57:57.824835: [info] 
2025-10-17 21:57:57.824881: [info] p3> Test suite p3-test failed
2025-10-17 21:57:57.825924: [debug] Checking for project config at: /home/diego/Desktop/p3/stack.yaml
2025-10-17 21:57:57.826133: [debug] Loading project config file stack.yaml
2025-10-17 21:57:57.830522: [debug] (SQL) SELECT COUNT(*) FROM "last_performed" WHERE ("action"=?) AND ("timestamp">=?); [PersistInt64 1,PersistUTCTime 2025-10-17 02:57:57.8304883 UTC]
2025-10-17 21:57:57.830938: [error] 
Error: [S-7282]
       Stack failed to execute the build plan.
       
       While executing the build plan, Stack encountered the following errors:
       
       TestSuiteFailure (PackageIdentifier {pkgName = PackageName "p3", pkgVersion = mkVersion [0,1,0,0]}) (fromList [("p3-test",Just (ExitFailure 1))]) Nothing ""
